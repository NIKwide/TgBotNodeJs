const TelegramBot = require('node-telegram-bot-api');
const axios = require('axios');

// –£–∫–∞–∂–∏—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω
const bot = new TelegramBot('', { polling: true });

console.log('–ó–∞–ø—É—â–µ–Ω –±–æ—Ç');

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
bot.on('message', async (msg) => {
    const chatId = msg.chat.id;

    try {
        if (msg.text === '/start') {
            const userName = msg.from.first_name;
            await sendStartMessage(chatId, userName);
        } else if (msg.contact) {
            const phoneNumber = msg.contact.phone_number.replace('+', '');
            const userId = msg.contact.user_id.toString();
            console.log(`–û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–∞: ${phoneNumber}; –ò–º—è: ${msg.from.first_name}`);
            await savePhoneNumberToDatabase(phoneNumber, userId, chatId);
        }
    } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ${error.message}`);
    }
});

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
async function sendStartMessage(chatId, userName) {
    try {
        const imageUrl = "https://krasivosvetim.ru/image/cache/catalog/0_banneri/%D0%BF%D1%80%D0%B8%D0%BC%D0%B5%D1%801-500x500.jpg";
        await bot.sendPhoto(chatId, imageUrl, {
            caption: `–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ ${userName} üëãüèΩ\n–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ –ö—Ä–∞—Å–∏–≤–æ –°–≤–µ—Ç–∏–º –∏ –ø–æ–ª—É—á–∏—Ç–µ —Å–∫–∏–¥–∫—É 5%.`
        });
        
        await bot.sendMessage(chatId, "–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –Ω–∞–∂–∞–≤ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ", {
            reply_markup: {
                keyboard: [[{
                    text: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞',
                    request_contact: true
                }]],
                resize_keyboard: true,
                one_time_keyboard: true
            }
        });
    } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: ${error.message}`);
    }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
async function savePhoneNumberToDatabase(phoneNumber, userId, chatId) {
    try {
        const formData = new URLSearchParams();
        formData.append('PhoneNumber', phoneNumber);
        formData.append('Id_user', userId);
        const response = await axios.post('https://krasivotgweb.ru/systemclient/check_user_tg_bot.php', formData, {
            headers: { 'Content-Type': 'application/x-www-form-urlencoded' }
        });
        const responseString = response.data;
        console.log(responseString);
        if (responseString.includes('–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω')) {
            await bot.sendMessage(chatId, '–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.', {
                reply_markup: { remove_keyboard: true }
            });
            await sendStartMessage2(1, chatId);
        } else if (responseString.includes('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω')) {
            await bot.sendMessage(chatId, '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!', {
                reply_markup: { remove_keyboard: true }
            });
            await sendStartMessage2(0, chatId);
        } else {
            await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.', {
                reply_markup: { remove_keyboard: true }
            });
        }
    } catch (error) {
        console.error(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è: ${error.message}`);
        await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞.', {
            reply_markup: { remove_keyboard: true }
        });
    }
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–∞—Ä—Ç–æ–π
async function sendStartMessage2(value, chatId) {
    try {
        const inlineKeyboard = {
            inline_keyboard: [[{
                text: '–ú–æ—è –∫–∞—Ä—Ç–∞ üí≥',
                web_app: { url: 'https://krasivotgweb.ru/systemclient/index.php' }
            }]]
        };

        if (value === 0) {
            await bot.sendMessage(chatId, '–í—ã —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ –Ω–∞—à–µ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏! –í–∞—à–∞ –∫–∞—Ä—Ç–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ:', {
                reply_markup: inlineKeyboard
            });
        } else {
            await bot.sendMessage(chatId, '–í–∞—à–∞ –∫–∞—Ä—Ç–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ:', {
                reply_markup: inlineKeyboard
            });
        }
    } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ${error.message}`);
    }
}
